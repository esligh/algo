
1.K 桶 刷新
通常节点会利用刘静自己的节点查询
操作来持续更新对应的K桶信息
为了避免没有查询操作经过时而保存了错误信息，节点会
对那些在过去一个小时之内没有收到任何节点查询操作的K桶
执行刷新操作(BT协议实现规定为15分钟)。所谓刷新操作
就是说从该K桶中选择一个随机的节点信息，并对该节点
ID执行一次FIND_NODE 操作
2.rpc消息的检测
在节点发送一个rpc消息时，随消息携带一个随机的检测码，用来防治
消息的伪造
3.执行store操作的k个节点每小时重新发布自己所有的<key,value>对数据
(对于kademlia，每一个<key,value>的原始发布者被要求每隔24小时重新发布一次，
否则<key,value>将在发布之后的24小时之后过期)
4.如果搜索成功，搜索的发起者将这个<key,value>对存储到已知的，最近的但在
在其他节点中没有返回该value的node上
如果一个<key,value>被频繁搜索，那么它很可能被缓存到很多ID不太接近key的node中
为了避免过度缓存，每一个<key,value>都有一个过期时间，这个过期时间
和当前node和"最接近key的node之间“的node个数的指数的倒数成正比
5.规定在任何时候，当节点w发现新节点u比w上的某些<key,value>对数据更接近时，则
把w上的<key,value>拷贝到u上，但并不从w上删除